replica:
  scale: 3
  metadata:
    longhorn:
      volume_name: $VOLUME_NAME
      volume_size: $VOLUME_SIZE
      slab_size: $SLAB_SIZE
  labels:
    io.rancher.sidekicks: replica-health
    io.rancher.container.hostname_override: container_name
    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.scheduler.affinity:container_soft: $CONVOY_CONTAINER
  image: rancher/longhorn:v0.0.2
  volumes:
  - /volumes
  command: start-replica.sh
  links:
  - controller
  health_check:
    healthy_threshold: 1
    interval: 2000
    port: 8199
    recreate_on_quorum_strategy_config:
      quorum: 1
    request_line: GET /replica/status HTTP/1.0
    response_timeout: 2000
    strategy: recreateOnQuorum
    unhealthy_threshold: 2

replica-health:
  image: rancher/longhorn:v0.0.2
  net: container:replica
  command: start-replica-health.sh


controller:
  labels:
    io.rancher.scheduler.affinity:container: $CONVOY_CONTAINER
    io.rancher.sidekicks: controller-health
  health_check:
    healthy_threshold: 1
    interval: 2000
    port: 8199
    request_line: GET /controller/status HTTP/1.0
    response_timeout: 2000
    strategy: none
    unhealthy_threshold: 2
  image: rancher/longhorn:v0.0.2
  privileged: true
  volumes:
  - /dev:/host/dev
  - /lib/modules:/lib/modules:ro
  command: start-controller.sh
   
controller-health:
  image: rancher/longhorn:v0.0.2
  net: container:controller
  command: start-controller-health.sh
